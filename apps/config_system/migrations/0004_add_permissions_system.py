# Generated by Django 4.2.9

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('config_system', '0002_smtp_models'),
    ]

    operations = [
        # Crear modelo PermisoCustom
        migrations.CreateModel(
            name='PermisoCustom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único del permiso (ej: actas.crear, users.editar)', max_length=100, unique=True, verbose_name='Código del permiso')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del permiso')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción detallada')),
                ('categoria', models.CharField(choices=[('actas', 'Gestión de Actas'), ('users', 'Gestión de Usuarios'), ('config', 'Configuración del Sistema'), ('reports', 'Reportes y Estadísticas'), ('files', 'Gestión de Archivos'), ('portal', 'Portal Ciudadano'), ('api', 'API y Integraciones'), ('logs', 'Logs del Sistema'), ('dashboard', 'Dashboard y Métricas'), ('smtp', 'Sistema de Email'), ('ia', 'Inteligencia Artificial'), ('whisper', 'Transcripción de Audio'), ('custom', 'Personalizado')], default='custom', max_length=20, verbose_name='Categoría')),
                ('nivel_acceso', models.CharField(choices=[('leer', 'Solo Lectura'), ('escribir', 'Lectura y Escritura'), ('admin', 'Administración'), ('super', 'Super Administrador')], default='leer', max_length=20, verbose_name='Nivel de acceso')),
                ('urls_permitidas', models.TextField(blank=True, help_text='URLs separadas por comas que permite este permiso', verbose_name='URLs permitidas')),
                ('mostrar_en_menu', models.BooleanField(default=False, help_text='Si se muestra como opción de menú', verbose_name='Mostrar en menú')),
                ('icono_menu', models.CharField(blank=True, help_text='Clase CSS para el icono (ej: fas fa-users)', max_length=50, verbose_name='Icono del menú')),
                ('orden_menu', models.IntegerField(default=100, help_text='Orden de aparición en el menú', verbose_name='Orden en menú')),
                ('es_sistema', models.BooleanField(default=False, help_text='Si es un permiso del sistema (no modificable)', verbose_name='Permiso del sistema')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permisos_creados', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='permisos_modificados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Permiso Personalizado',
                'verbose_name_plural': 'Permisos Personalizados',
                'db_table': 'config_system_permisocustom',
                'ordering': ['categoria', 'orden_menu', 'nombre'],
            },
        ),
        
        # Crear modelo PerfilUsuario (nuevo sistema)
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, unique=True, verbose_name='Nombre del perfil')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('color', models.CharField(default='#007bff', help_text='Color hexadecimal para identificar el perfil', max_length=7, verbose_name='Color')),
                ('es_publico', models.BooleanField(default=False, help_text='Si es visible para usuarios normales', verbose_name='Perfil público')),
                ('nivel_jerarquia', models.PositiveIntegerField(default=100, help_text='Nivel jerárquico (menor número = mayor jerarquía)', verbose_name='Nivel de jerarquía')),
                ('dashboard_personalizado', models.BooleanField(default=False, help_text='Si tiene dashboard personalizado', verbose_name='Dashboard personalizado')),
                ('pagina_inicio', models.CharField(blank=True, help_text='URL de página de inicio personalizada', max_length=200, verbose_name='Página de inicio')),
                ('es_sistema', models.BooleanField(default=False, help_text='Si es un perfil del sistema (no modificable)', verbose_name='Perfil del sistema')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfiles_creados', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='perfiles_modificados', to=settings.AUTH_USER_MODEL)),
                ('permisos', models.ManyToManyField(blank=True, related_name='perfiles', to='config_system.permisocustom', verbose_name='Permisos')),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuario',
                'db_table': 'config_system_perfilusuario',
                'ordering': ['nivel_jerarquia', 'nombre'],
            },
        ),
        
        # Crear modelo UsuarioPerfil
        migrations.CreateModel(
            name='UsuarioPerfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_principal', models.BooleanField(default=False, help_text='Si es el perfil principal del usuario', verbose_name='Perfil principal')),
                ('fecha_asignacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de asignación')),
                ('fecha_expiracion', models.DateTimeField(blank=True, help_text='Fecha de expiración del perfil', null=True, verbose_name='Fecha de expiración')),
                ('notas', models.TextField(blank=True, verbose_name='Notas sobre la asignación')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('asignado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='asignaciones_realizadas', to=settings.AUTH_USER_MODEL)),
                ('perfil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asignaciones', to='config_system.perfilusuario')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='perfiles_asignados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asignación Usuario-Perfil',
                'verbose_name_plural': 'Asignaciones Usuario-Perfil',
                'db_table': 'config_system_usuarioperfil',
                'ordering': ['-fecha_asignacion'],
            },
        ),
        
        # Crear modelo LogPermisos
        migrations.CreateModel(
            name='LogPermisos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accion', models.CharField(choices=[('asignar_perfil', 'Asignar Perfil'), ('remover_perfil', 'Remover Perfil'), ('modificar_permiso', 'Modificar Permiso'), ('crear_permiso', 'Crear Permiso'), ('eliminar_permiso', 'Eliminar Permiso'), ('acceso_denegado', 'Acceso Denegado'), ('acceso_concedido', 'Acceso Concedido')], max_length=50, verbose_name='Acción')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('url_solicitada', models.CharField(blank=True, max_length=500, verbose_name='URL solicitada')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadatos adicionales')),
                ('fecha_evento', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del evento')),
                ('perfil_afectado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config_system.perfilusuario')),
                ('permiso_afectado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config_system.permisocustom')),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('usuario_afectado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='logs_como_afectado', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Permisos',
                'verbose_name_plural': 'Logs de Permisos',
                'db_table': 'config_system_logpermisos',
                'ordering': ['-fecha_evento'],
            },
        ),
        
        # Crear índices y constraints
        migrations.AddConstraint(
            model_name='usuarioperfil',
            constraint=models.UniqueConstraint(fields=('usuario', 'perfil'), name='unique_usuario_perfil'),
        ),
        migrations.AddIndex(
            model_name='usuarioperfil',
            index=models.Index(fields=['usuario'], name='idx_usuario_perfil_usuario'),
        ),
        migrations.AddIndex(
            model_name='usuarioperfil',
            index=models.Index(fields=['perfil'], name='idx_usuario_perfil_perfil'),
        ),
        migrations.AddIndex(
            model_name='usuarioperfil',
            index=models.Index(fields=['activo'], name='idx_usuario_perfil_activo'),
        ),
        migrations.AddIndex(
            model_name='perfilusuario',
            index=models.Index(fields=['nombre'], name='idx_perfil_usuario_nombre'),
        ),
        migrations.AddIndex(
            model_name='perfilusuario',
            index=models.Index(fields=['nivel_jerarquia'], name='idx_perfil_usuario_nivel'),
        ),
        migrations.AddIndex(
            model_name='perfilusuario',
            index=models.Index(fields=['activo'], name='idx_perfil_usuario_activo'),
        ),
        migrations.AddIndex(
            model_name='permisocustom',
            index=models.Index(fields=['codigo'], name='idx_permiso_custom_codigo'),
        ),
        migrations.AddIndex(
            model_name='permisocustom',
            index=models.Index(fields=['categoria'], name='idx_permiso_custom_categoria'),
        ),
        migrations.AddIndex(
            model_name='permisocustom',
            index=models.Index(fields=['activo'], name='idx_permiso_custom_activo'),
        ),
        migrations.AddIndex(
            model_name='logpermisos',
            index=models.Index(fields=['fecha_evento'], name='idx_log_permisos_fecha'),
        ),
        migrations.AddIndex(
            model_name='logpermisos',
            index=models.Index(fields=['usuario'], name='idx_log_permisos_usuario'),
        ),
        migrations.AddIndex(
            model_name='logpermisos',
            index=models.Index(fields=['accion'], name='idx_log_permisos_accion'),
        ),
    ]
