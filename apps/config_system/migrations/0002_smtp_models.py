# Generated by Django 4.2.9

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('config_system', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionSMTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre del proveedor')),
                ('activo', models.BooleanField(default=True, verbose_name='Activo')),
                ('por_defecto', models.BooleanField(default=False, verbose_name='Proveedor por defecto')),
                ('prioridad', models.IntegerField(default=1, verbose_name='Prioridad (1=mayor prioridad)')),
                ('servidor_smtp', models.CharField(max_length=255, verbose_name='Servidor SMTP')),
                ('puerto', models.IntegerField(default=587, verbose_name='Puerto')),
                ('usuario_smtp', models.CharField(max_length=255, verbose_name='Usuario SMTP')),
                ('password_smtp', models.CharField(max_length=255, verbose_name='Contraseña SMTP')),
                ('usa_tls', models.BooleanField(default=True, verbose_name='Usar TLS')),
                ('usa_ssl', models.BooleanField(default=False, verbose_name='Usar SSL')),
                ('email_remitente', models.EmailField(max_length=254, verbose_name='Email remitente')),
                ('nombre_remitente', models.CharField(max_length=255, verbose_name='Nombre del remitente')),
                ('limite_diario', models.IntegerField(default=1000, verbose_name='Límite diario de emails')),
                ('emails_enviados_hoy', models.IntegerField(default=0, verbose_name='Emails enviados hoy')),
                ('ultima_actualizacion_contador', models.DateField(auto_now=True, verbose_name='Última actualización contador')),
                ('proveedor', models.CharField(choices=[('office365', 'Office 365'), ('gmail', 'Gmail'), ('yahoo', 'Yahoo'), ('sendgrid', 'SendGrid'), ('mailgun', 'Mailgun'), ('ses', 'Amazon SES'), ('smtp2go', 'SMTP2GO'), ('custom', 'Personalizado')], default='office365', max_length=50, verbose_name='Tipo de proveedor')),
                ('configuraciones_extra', models.JSONField(blank=True, default=dict, verbose_name='Configuraciones adicionales')),
                ('ultimo_test', models.DateTimeField(blank=True, null=True, verbose_name='Último test')),
                ('test_exitoso', models.BooleanField(default=False, verbose_name='Último test exitoso')),
                ('mensaje_error', models.TextField(blank=True, null=True, verbose_name='Último mensaje de error')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Configuración SMTP',
                'verbose_name_plural': 'Configuraciones SMTP',
                'ordering': ['prioridad', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_aplicacion', models.CharField(default='Sistema de Actas Municipales', max_length=255, verbose_name='Nombre de la aplicación')),
                ('logo_email', models.ImageField(blank=True, null=True, upload_to='config/email/', verbose_name='Logo para emails')),
                ('template_html_base', models.TextField(default='\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset="UTF-8">\n    <title>{{asunto}}</title>\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .header { background-color: #1e3a8a; color: white; padding: 20px; text-align: center; }\n        .content { padding: 20px; }\n        .footer { background-color: #f8f9fa; padding: 15px; text-align: center; font-size: 12px; color: #666; }\n        .logo { max-width: 200px; height: auto; }\n    </style>\n</head>\n<body>\n    <div class="header">\n        {% if logo_url %}<img src="{{logo_url}}" alt="Logo" class="logo">{% endif %}\n        <h1>{{nombre_aplicacion}}</h1>\n    </div>\n    <div class="content">\n        {{contenido}}\n    </div>\n    <div class="footer">\n        {{pie_pagina}}\n    </div>\n</body>\n</html>\n        ', verbose_name='Template HTML base')),
                ('pie_pagina', models.TextField(default='\n<p><strong>Municipio de Pastaza</strong><br>\nPuyo, Pastaza - Ecuador<br>\nTeléfono: (03) 2885-133<br>\nEmail: info@puyo.gob.ec</p>\n<p><small>Este es un mensaje automático del Sistema de Actas Municipales. Por favor no responder a este email.</small></p>\n        ', verbose_name='Pie de página')),
                ('email_respuesta', models.EmailField(default='noreply@puyo.gob.ec', max_length=254, verbose_name='Email de no respuesta')),
                ('email_soporte', models.EmailField(default='soporte@puyo.gob.ec', max_length=254, verbose_name='Email de soporte')),
                ('url_sistema', models.URLField(default='http://localhost:8000', verbose_name='URL del sistema')),
                ('url_publica', models.URLField(default='http://puyo.gob.ec', verbose_name='URL pública del municipio')),
                ('reintentos_maximos', models.IntegerField(default=3, verbose_name='Máximo reintentos por email')),
                ('tiempo_espera_reintento', models.IntegerField(default=300, verbose_name='Tiempo de espera entre reintentos (segundos)')),
                ('sistema_activo', models.BooleanField(default=True, verbose_name='Sistema de emails activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True)),
                ('modificado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Email',
                'verbose_name_plural': 'Configuración de Email',
            },
        ),
        migrations.CreateModel(
            name='LogEnvioEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destinatario', models.EmailField(max_length=254, verbose_name='Destinatario')),
                ('asunto', models.CharField(max_length=255, verbose_name='Asunto')),
                ('contenido_texto', models.TextField(blank=True, verbose_name='Contenido en texto')),
                ('contenido_html', models.TextField(blank=True, verbose_name='Contenido HTML')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('enviado', 'Enviado'), ('error', 'Error'), ('reintentando', 'Reintentando')], default='pendiente', max_length=20)),
                ('enviado_en', models.DateTimeField(blank=True, null=True)),
                ('mensaje_error', models.TextField(blank=True, null=True)),
                ('intentos_realizados', models.IntegerField(default=0)),
                ('tiempo_procesamiento', models.FloatField(blank=True, null=True, verbose_name='Tiempo de procesamiento (segundos)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('ip_origen', models.GenericIPAddressField(blank=True, null=True)),
                ('configuracion_smtp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='config_system.configuracionsmtp')),
                ('usuario_solicitante', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Log de Envío de Email',
                'verbose_name_plural': 'Logs de Envío de Email',
                'ordering': ['-fecha_creacion'],
            },
        ),
    ]
