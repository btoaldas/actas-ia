# Generated by Django 4.2.9 on 2025-09-06 18:32

import apps.pages.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('pages', '0003_estadisticamunicipal_indicadortransparencia_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='EventoMunicipal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(help_text='Título del evento', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción detallada del evento')),
                ('tipo', models.CharField(choices=[('sesion_ordinaria', 'Sesión Ordinaria'), ('sesion_extraordinaria', 'Sesión Extraordinaria'), ('audiencia_publica', 'Audiencia Pública'), ('reunion_trabajo', 'Reunión de Trabajo'), ('capacitacion', 'Capacitación'), ('evento_publico', 'Evento Público'), ('otro', 'Otro')], default='otro', max_length=25)),
                ('estado', models.CharField(choices=[('programado', 'Programado'), ('confirmado', 'Confirmado'), ('en_curso', 'En Curso'), ('finalizado', 'Finalizado'), ('cancelado', 'Cancelado'), ('reprogramado', 'Reprogramado')], default='programado', max_length=15)),
                ('visibilidad', models.CharField(choices=[('publico', 'Público'), ('privado', 'Privado'), ('restringido', 'Restringido')], default='publico', max_length=15)),
                ('fecha_inicio', models.DateTimeField(help_text='Fecha y hora de inicio')),
                ('fecha_fin', models.DateTimeField(help_text='Fecha y hora de fin')),
                ('ubicacion', models.CharField(help_text='Lugar del evento', max_length=200)),
                ('direccion', models.TextField(blank=True, help_text='Dirección completa')),
                ('responsable', models.CharField(help_text='Responsable del evento', max_length=100)),
                ('capacidad_maxima', models.PositiveIntegerField(default=0, help_text='Capacidad máxima del evento (0 = sin límite)')),
                ('agenda', models.TextField(blank=True, help_text='Agenda u orden del día')),
                ('requisitos', models.TextField(blank=True, help_text='Requisitos para asistir')),
                ('observaciones', models.TextField(blank=True, help_text='Observaciones adicionales')),
                ('imagen_evento', models.ImageField(blank=True, help_text='Imagen representativa del evento', null=True, upload_to=apps.pages.models.evento_documento_upload_path)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('fecha_publicacion', models.DateTimeField(blank=True, null=True)),
                ('activo', models.BooleanField(default=True)),
                ('enviar_recordatorio', models.BooleanField(default=True, help_text='Enviar recordatorio por email')),
                ('recordatorio_enviado', models.BooleanField(default=False)),
                ('asistentes_confirmados', models.ManyToManyField(blank=True, help_text='Usuarios que confirmaron asistencia', related_name='eventos_confirmado', to=settings.AUTH_USER_MODEL)),
                ('asistentes_invitados', models.ManyToManyField(blank=True, help_text='Usuarios invitados al evento', related_name='eventos_invitado', to=settings.AUTH_USER_MODEL)),
                ('organizador', models.ForeignKey(help_text='Usuario organizador del evento', on_delete=django.db.models.deletion.PROTECT, related_name='eventos_organizados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evento Municipal',
                'verbose_name_plural': 'Eventos Municipales',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='DocumentoEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200)),
                ('descripcion', models.TextField(blank=True)),
                ('archivo', models.FileField(upload_to=apps.pages.models.evento_documento_upload_path)),
                ('es_publico', models.BooleanField(default=True, help_text='¿El documento es público?')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='pages.eventomunicipal')),
                ('subido_por', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Documento de Evento',
                'verbose_name_plural': 'Documentos de Eventos',
                'ordering': ['-fecha_subida'],
            },
        ),
        migrations.CreateModel(
            name='AsistenciaEvento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('confirmado', 'Confirmado'), ('presente', 'Presente'), ('ausente', 'Ausente'), ('tardanza', 'Tardanza')], default='confirmado', max_length=15)),
                ('fecha_confirmacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
                ('observaciones', models.TextField(blank=True)),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='asistencias', to='pages.eventomunicipal')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Asistencia a Evento',
                'verbose_name_plural': 'Asistencias a Eventos',
                'ordering': ['-fecha_confirmacion'],
            },
        ),
        migrations.AddIndex(
            model_name='eventomunicipal',
            index=models.Index(fields=['fecha_inicio'], name='pages_event_fecha_i_37c639_idx'),
        ),
        migrations.AddIndex(
            model_name='eventomunicipal',
            index=models.Index(fields=['tipo'], name='pages_event_tipo_3ec19e_idx'),
        ),
        migrations.AddIndex(
            model_name='eventomunicipal',
            index=models.Index(fields=['estado'], name='pages_event_estado_211a67_idx'),
        ),
        migrations.AddIndex(
            model_name='eventomunicipal',
            index=models.Index(fields=['visibilidad'], name='pages_event_visibil_f38552_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='asistenciaevento',
            unique_together={('evento', 'usuario')},
        ),
    ]
