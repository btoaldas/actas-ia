# Generated by Django 4.2.9 on 2025-09-13 22:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('transcripcion', '0004_alter_configuraciontranscripcion_vad_filtro'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionSegmento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orden', models.IntegerField(help_text='Orden del segmento en la plantilla')),
                ('obligatorio', models.BooleanField(default=False, help_text='Si es obligatorio en esta plantilla')),
                ('prompt_personalizado', models.TextField(blank=True, help_text='Prompt específico para esta plantilla')),
                ('parametros_override', models.JSONField(blank=True, default=dict, help_text='Parámetros que sobrescriben los del segmento')),
            ],
            options={
                'verbose_name': 'Configuración de Segmento',
                'verbose_name_plural': 'Configuraciones de Segmentos',
                'ordering': ['plantilla', 'orden'],
            },
        ),
        migrations.CreateModel(
            name='SegmentoPlantilla',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único del segmento', max_length=50, unique=True)),
                ('nombre', models.CharField(help_text='Nombre descriptivo del segmento', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción del propósito del segmento')),
                ('categoria', models.CharField(choices=[('encabezado', 'Encabezado'), ('titulo', 'Título'), ('fecha', 'Fecha'), ('asistentes', 'Asistentes'), ('orden_dia', 'Orden del Día'), ('introduccion', 'Introducción'), ('desarrollo', 'Desarrollo'), ('resoluciones', 'Resoluciones'), ('compromisos', 'Compromisos'), ('cierre', 'Cierre'), ('firmas', 'Firmas'), ('anexos', 'Anexos'), ('otros', 'Otros')], help_text='Categoría del segmento', max_length=50)),
                ('tipo', models.CharField(choices=[('estatico', 'Estático'), ('dinamico', 'Dinámico con IA'), ('hibrido', 'Híbrido')], help_text='Tipo de procesamiento', max_length=20)),
                ('prompt_ia', models.TextField(blank=True, help_text='Prompt para segmentos dinámicos')),
                ('estructura_json', models.JSONField(blank=True, default=dict, help_text='Estructura esperada del resultado')),
                ('componentes', models.JSONField(blank=True, default=dict, help_text='Componentes del segmento')),
                ('parametros_entrada', models.JSONField(blank=True, default=list, help_text='Parámetros requeridos del contexto')),
                ('orden_defecto', models.IntegerField(default=0, help_text='Orden por defecto en plantillas')),
                ('reutilizable', models.BooleanField(default=True, help_text='Si puede ser usado en múltiples plantillas')),
                ('obligatorio', models.BooleanField(default=False, help_text='Si es obligatorio en todas las plantillas')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='segmentos_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Segmento de Plantilla',
                'verbose_name_plural': 'Segmentos de Plantilla',
                'ordering': ['categoria', 'orden_defecto', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ProveedorIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre descriptivo del proveedor', max_length=100, unique=True)),
                ('tipo', models.CharField(choices=[('openai', 'OpenAI'), ('deepseek', 'DeepSeek'), ('ollama', 'Ollama (Local)'), ('anthropic', 'Anthropic Claude'), ('google', 'Google Gemini')], help_text='Tipo de proveedor de IA', max_length=50)),
                ('api_key', models.CharField(blank=True, help_text='Clave API (se encripta en producción)', max_length=500)),
                ('api_url', models.URLField(blank=True, help_text='URL base de la API (opcional)')),
                ('modelo', models.CharField(help_text='Modelo específico a usar (ej: gpt-4, deepseek-v2)', max_length=100)),
                ('temperatura', models.FloatField(default=0.7, help_text='Creatividad del modelo (0-1)')),
                ('max_tokens', models.IntegerField(default=4000, help_text='Máximo de tokens por respuesta')),
                ('timeout', models.IntegerField(default=60, help_text='Timeout en segundos')),
                ('configuracion_adicional', models.JSONField(blank=True, default=dict, help_text='Parámetros adicionales del proveedor')),
                ('activo', models.BooleanField(default=True, help_text='Si está disponible para uso')),
                ('costo_por_1k_tokens', models.DecimalField(decimal_places=6, default=0, help_text='Costo estimado por 1000 tokens', max_digits=10)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proveedores_ia_creados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proveedor IA',
                'verbose_name_plural': 'Proveedores IA',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='PlantillaActa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(help_text='Código único de la plantilla', max_length=50, unique=True)),
                ('nombre', models.CharField(help_text='Nombre descriptivo de la plantilla', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción del uso de la plantilla')),
                ('tipo_acta', models.CharField(choices=[('ordinaria', 'Sesión Ordinaria'), ('extraordinaria', 'Sesión Extraordinaria'), ('audiencia', 'Audiencia Pública'), ('comision', 'Comisión'), ('directorio', 'Directorio'), ('asamblea', 'Asamblea'), ('otros', 'Otros')], help_text='Tipo de acta que genera', max_length=50)),
                ('prompt_global', models.TextField(help_text='Prompt para unificación final del acta')),
                ('configuracion_procesamiento', models.JSONField(blank=True, default=dict, help_text='Configuración adicional de procesamiento')),
                ('activa', models.BooleanField(default=True, help_text='Si está disponible para uso')),
                ('version', models.CharField(default='1.0', help_text='Versión de la plantilla', max_length=20)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('proveedor_ia_defecto', models.ForeignKey(blank=True, help_text='Proveedor IA por defecto', null=True, on_delete=django.db.models.deletion.SET_NULL, to='generador_actas.proveedoria')),
                ('segmentos', models.ManyToManyField(help_text='Segmentos que componen la plantilla', through='generador_actas.ConfiguracionSegmento', to='generador_actas.segmentoplantilla')),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='plantillas_creadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Plantilla de Acta',
                'verbose_name_plural': 'Plantillas de Actas',
                'ordering': ['tipo_acta', 'nombre'],
            },
        ),
        migrations.AddField(
            model_name='configuracionsegmento',
            name='plantilla',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generador_actas.plantillaacta'),
        ),
        migrations.AddField(
            model_name='configuracionsegmento',
            name='segmento',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='generador_actas.segmentoplantilla'),
        ),
        migrations.CreateModel(
            name='ActaGenerada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_acta', models.CharField(help_text='Número único del acta', max_length=50, unique=True)),
                ('titulo', models.CharField(help_text='Título del acta', max_length=300)),
                ('segmentos_procesados', models.JSONField(blank=True, default=dict, help_text='Resultado del procesamiento de segmentos')),
                ('contenido_borrador', models.TextField(blank=True, help_text='Borrador inicial del acta')),
                ('contenido_final', models.TextField(blank=True, help_text='Versión final del acta')),
                ('contenido_html', models.TextField(blank=True, help_text='Versión HTML del acta')),
                ('metadatos', models.JSONField(blank=True, default=dict, help_text='Metadatos adicionales')),
                ('metricas_procesamiento', models.JSONField(blank=True, default=dict, help_text='Métricas de tiempo, tokens, costo')),
                ('historial_cambios', models.JSONField(blank=True, default=list, help_text='Historial de modificaciones')),
                ('estado', models.CharField(choices=[('borrador', 'Borrador'), ('pendiente', 'Pendiente de Procesamiento'), ('procesando', 'Procesando'), ('procesando_segmentos', 'Procesando Segmentos'), ('unificando', 'Unificando Contenido'), ('revision', 'En Revisión'), ('aprobado', 'Aprobado'), ('publicado', 'Publicado'), ('rechazado', 'Rechazado'), ('error', 'Error en Procesamiento')], default='borrador', help_text='Estado actual del acta', max_length=30)),
                ('progreso', models.IntegerField(default=0, help_text='Progreso de procesamiento (0-100)')),
                ('task_id_celery', models.CharField(blank=True, help_text='ID de tarea Celery', max_length=255)),
                ('mensajes_error', models.TextField(blank=True, help_text='Mensajes de error durante procesamiento')),
                ('fecha_sesion', models.DateTimeField(help_text='Fecha de la sesión/reunión')),
                ('fecha_procesamiento', models.DateTimeField(blank=True, help_text='Fecha de inicio de procesamiento', null=True)),
                ('fecha_revision', models.DateTimeField(blank=True, help_text='Fecha de revisión', null=True)),
                ('fecha_aprobacion', models.DateTimeField(blank=True, help_text='Fecha de aprobación', null=True)),
                ('fecha_publicacion', models.DateTimeField(blank=True, help_text='Fecha de publicación', null=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('plantilla', models.ForeignKey(help_text='Plantilla usada', on_delete=django.db.models.deletion.PROTECT, to='generador_actas.plantillaacta')),
                ('proveedor_ia', models.ForeignKey(help_text='Proveedor IA usado', on_delete=django.db.models.deletion.PROTECT, to='generador_actas.proveedoria')),
                ('transcripcion', models.ForeignKey(help_text='Transcripción base', on_delete=django.db.models.deletion.CASCADE, to='transcripcion.transcripcion')),
                ('usuario_aprobacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actas_aprobadas', to=settings.AUTH_USER_MODEL)),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='actas_creadas', to=settings.AUTH_USER_MODEL)),
                ('usuario_revision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actas_revisadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Acta Generada',
                'verbose_name_plural': 'Actas Generadas',
                'ordering': ['-fecha_sesion', '-fecha_creacion'],
                'permissions': [('can_approve_acta', 'Puede aprobar actas'), ('can_publish_acta', 'Puede publicar actas'), ('can_review_acta', 'Puede revisar actas')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='configuracionsegmento',
            unique_together={('plantilla', 'orden')},
        ),
    ]
