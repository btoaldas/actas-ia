# Generated by Django 4.2.9 on 2025-09-08 04:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('audio_processing', '0004_procesamientoaudio_bit_rate_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfiguracionTranscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo_whisper', models.CharField(choices=[('tiny', 'Tiny (39 MB)'), ('base', 'Base (74 MB)'), ('small', 'Small (244 MB)'), ('medium', 'Medium (769 MB)'), ('large', 'Large (1550 MB)'), ('large-v2', 'Large V2 (1550 MB)'), ('large-v3', 'Large V3 (1550 MB)')], default='base', help_text='Modelo de Whisper para transcripción', max_length=50)),
                ('idioma_principal', models.CharField(choices=[('es', 'Español'), ('en', 'Inglés'), ('auto', 'Detección automática')], default='es', max_length=10)),
                ('temperatura', models.FloatField(default=0.0, help_text='Creatividad en la transcripción (0.0-1.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('modelo_diarizacion', models.CharField(default='pyannote/speaker-diarization@2.1', help_text='Modelo de pyannote para diarización', max_length=100)),
                ('min_hablantes', models.IntegerField(default=1, help_text='Número mínimo de hablantes esperados', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('max_hablantes', models.IntegerField(default=10, help_text='Número máximo de hablantes esperados', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)])),
                ('segmentacion_minima', models.FloatField(default=1.0, help_text='Duración mínima de segmento en segundos')),
                ('umbral_confianza', models.FloatField(default=0.5, help_text='Umbral mínimo de confianza para aceptar transcripción', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('activa', models.BooleanField(default=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='configuraciones_transcripcion_creadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuración de Transcripción',
                'verbose_name_plural': 'Configuraciones de Transcripción',
                'ordering': ['-activa', '-fecha_actualizacion'],
            },
        ),
        migrations.CreateModel(
            name='Transcripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_transcripcion', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('en_proceso', 'En Proceso'), ('transcribiendo', 'Transcribiendo'), ('diarizando', 'Diarizando'), ('procesando', 'Procesando Resultados'), ('completado', 'Completado'), ('error', 'Error'), ('cancelado', 'Cancelado')], default='pendiente', max_length=20)),
                ('texto_completo', models.TextField(blank=True, help_text='Texto completo transcrito sin diarización')),
                ('transcripcion_json', models.JSONField(default=dict, help_text='Resultado estructurado de Whisper con timestamps')),
                ('diarizacion_json', models.JSONField(default=dict, help_text='Resultado de pyannote con segmentos por hablante')),
                ('conversacion_json', models.JSONField(default=list, help_text='Conversación estructurada con hablantes, tiempos y texto')),
                ('hablantes_detectados', models.JSONField(default=list, help_text='Lista de hablantes detectados automáticamente')),
                ('hablantes_identificados', models.JSONField(default=dict, help_text='Mapeo de hablantes detectados a nombres reales')),
                ('duracion_total', models.FloatField(blank=True, null=True)),
                ('numero_hablantes', models.IntegerField(default=0)),
                ('numero_segmentos', models.IntegerField(default=0)),
                ('confianza_promedio', models.FloatField(blank=True, null=True)),
                ('palabras_totales', models.IntegerField(default=0)),
                ('estadisticas_json', models.JSONField(default=dict, help_text='Estadísticas detalladas: tiempo por hablante, densidad, etc.')),
                ('palabras_clave', models.JSONField(default=list, help_text='Palabras clave extraídas del contenido')),
                ('temas_detectados', models.JSONField(default=list, help_text='Temas principales identificados')),
                ('tiempo_inicio_proceso', models.DateTimeField(blank=True, null=True)),
                ('tiempo_fin_proceso', models.DateTimeField(blank=True, null=True)),
                ('mensaje_error', models.TextField(blank=True)),
                ('progreso_porcentaje', models.IntegerField(default=0)),
                ('task_id_celery', models.CharField(blank=True, max_length=100)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('version_actual', models.IntegerField(default=1)),
                ('editado_manualmente', models.BooleanField(default=False)),
                ('fecha_ultima_edicion', models.DateTimeField(blank=True, null=True)),
                ('configuracion_utilizada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='transcripcion.configuraciontranscripcion')),
                ('procesamiento_audio', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transcripcion', to='audio_processing.procesamientoaudio')),
                ('usuario_creacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transcripciones_creadas', to=settings.AUTH_USER_MODEL)),
                ('usuario_ultima_edicion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transcripciones_editadas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transcripción',
                'verbose_name_plural': 'Transcripciones',
                'ordering': ['-fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='HistorialEdicion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField()),
                ('tipo_edicion', models.CharField(choices=[('texto', 'Edición de Texto'), ('hablante', 'Cambio de Hablante'), ('tiempo', 'Ajuste de Tiempo'), ('segmento', 'Modificación de Segmento'), ('fusion', 'Fusión de Segmentos'), ('division', 'División de Segmento'), ('eliminacion', 'Eliminación de Segmento'), ('adicion', 'Adición de Segmento')], max_length=50)),
                ('segmento_id', models.CharField(blank=True, max_length=50)),
                ('valor_anterior', models.JSONField(default=dict)),
                ('valor_nuevo', models.JSONField(default=dict)),
                ('comentario', models.TextField(blank=True)),
                ('fecha_edicion', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('transcripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_ediciones', to='transcripcion.transcripcion')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Historial de Edición',
                'verbose_name_plural': 'Historial de Ediciones',
                'ordering': ['-fecha_edicion'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionHablante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speaker_id', models.CharField(max_length=50)),
                ('nombre_real', models.CharField(max_length=100)),
                ('cargo', models.CharField(blank=True, max_length=100)),
                ('organizacion', models.CharField(blank=True, max_length=100)),
                ('color_chat', models.CharField(default='#007bff', help_text='Color hexadecimal para el chat', max_length=7)),
                ('avatar_url', models.URLField(blank=True)),
                ('tiempo_total_hablando', models.FloatField(default=0.0)),
                ('numero_intervenciones', models.IntegerField(default=0)),
                ('palabras_promedio_por_intervencion', models.FloatField(default=0.0)),
                ('confirmado_por_usuario', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('transcripcion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuracion_hablantes', to='transcripcion.transcripcion')),
            ],
            options={
                'verbose_name': 'Configuración de Hablante',
                'verbose_name_plural': 'Configuraciones de Hablantes',
            },
        ),
        migrations.AddIndex(
            model_name='transcripcion',
            index=models.Index(fields=['estado'], name='transcripci_estado_d9b0f3_idx'),
        ),
        migrations.AddIndex(
            model_name='transcripcion',
            index=models.Index(fields=['fecha_creacion'], name='transcripci_fecha_c_0630d2_idx'),
        ),
        migrations.AddIndex(
            model_name='transcripcion',
            index=models.Index(fields=['procesamiento_audio'], name='transcripci_procesa_1ccac7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='configuracionhablante',
            unique_together={('transcripcion', 'speaker_id')},
        ),
    ]
