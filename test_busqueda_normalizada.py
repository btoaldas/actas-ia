#!/usr/bin/env python
"""
Script de prueba para verificar la funcionalidad de b√∫squeda normalizada
"""
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from helpers.util import normalizar_busqueda

def test_normalizacion():
    """Pruebas de normalizaci√≥n de texto"""
    print("üß™ Pruebas de normalizaci√≥n de b√∫squeda:")
    print("=" * 50)
    
    # Casos de prueba
    casos = [
        ("Sesi√≥n", "sesion"),
        ("SESI√ìN", "sesion"),
        ("administraci√≥n", "administracion"),
        ("Educaci√≥n", "educacion"),
        ("INFORMACI√ìN", "informacion"),
        ("Participaci√≥n", "participacion"),
        ("reuni√≥n", "reunion"),
        ("decisi√≥n", "decision"),
        ("comisi√≥n", "comision"),
        ("situaci√≥n", "situacion"),
        ("Ni√±o", "nino"),
        ("a√±o", "ano"),
        ("A√±os", "anos"),
        ("Se√±or", "senor"),
        ("ni√±os", "ninos"),
    ]
    
    todos_exitosos = True
    
    for original, esperado in casos:
        resultado = normalizar_busqueda(original)
        exito = resultado == esperado
        emoji = "‚úÖ" if exito else "‚ùå"
        
        print(f"{emoji} '{original}' ‚Üí '{resultado}' (esperado: '{esperado}')")
        
        if not exito:
            todos_exitosos = False
    
    print("=" * 50)
    
    if todos_exitosos:
        print("üéâ ¬°Todas las pruebas pasaron exitosamente!")
        print("\nüìù Ejemplos de b√∫squedas que ahora funcionar√°n:")
        print("   - 'sesion' encontrar√° 'Sesi√≥n'")
        print("   - 'SESION' encontrar√° 'Sesi√≥n'") 
        print("   - 'administracion' encontrar√° 'Administraci√≥n'")
        print("   - 'educacion' encontrar√° 'Educaci√≥n'")
        print("   - 'informacion' encontrar√° 'Informaci√≥n'")
    else:
        print("‚ùå Algunas pruebas fallaron")
    
    return todos_exitosos

if __name__ == "__main__":
    test_normalizacion()