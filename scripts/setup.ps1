# ============================================================================
# Script de Inicializaci√≥n Completa - Sistema de Actas Municipales
# Fecha: 2025-09-06
# Descripci√≥n: Script para configurar completamente la base de datos
# ============================================================================

param(
    [switch]$IncludeTestData
)

Write-Host "üöÄ Inicializando Sistema de Actas Municipales" -ForegroundColor Blue
Write-Host "================================================" -ForegroundColor Blue
Write-Host ""

# Paso 1: Verificar Docker
Write-Host "1Ô∏è‚É£ Verificando contenedores Docker..." -ForegroundColor Yellow
try {
    $containers = docker ps --format "table {{.Names}}" | Select-String "actas_postgres"
    if (-not $containers) {
        Write-Host "‚ùå El contenedor PostgreSQL no est√° corriendo" -ForegroundColor Red
        Write-Host "Ejecutando: docker-compose up -d" -ForegroundColor Yellow
        docker-compose up -d
        Start-Sleep -Seconds 10
    } else {
        Write-Host "‚úÖ Contenedor PostgreSQL corriendo" -ForegroundColor Green
    }
}
catch {
    Write-Host "‚ùå Error verificando Docker" -ForegroundColor Red
    exit 1
}

# Paso 2: Ejecutar migraciones Django
Write-Host ""
Write-Host "2Ô∏è‚É£ Ejecutando migraciones Django..." -ForegroundColor Yellow
try {
    docker exec actas_web python manage.py migrate
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Migraciones Django completadas" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error en migraciones Django" -ForegroundColor Red
    }
}
catch {
    Write-Host "‚ùå Error ejecutando migraciones Django" -ForegroundColor Red
}

# Paso 3: Crear superusuario
Write-Host ""
Write-Host "3Ô∏è‚É£ Creando usuarios iniciales..." -ForegroundColor Yellow
try {
    docker exec actas_web python manage.py crear_usuarios_iniciales
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Usuarios iniciales creados" -ForegroundColor Green
    }
}
catch {
    Write-Host "‚ö†Ô∏è Error creando usuarios (posiblemente ya existen)" -ForegroundColor Yellow
}

# Paso 4: Ejecutar script de migraci√≥n inicial
Write-Host ""
Write-Host "4Ô∏è‚É£ Ejecutando configuraci√≥n inicial de BD..." -ForegroundColor Yellow
.\scripts\run_scripts.ps1 init

# Paso 5: Cargar datos iniciales
Write-Host ""
Write-Host "5Ô∏è‚É£ Cargando datos iniciales..." -ForegroundColor Yellow
.\scripts\run_scripts.ps1 data

# Paso 6: Cargar datos de prueba (opcional)
if ($IncludeTestData) {
    Write-Host ""
    Write-Host "6Ô∏è‚É£ Cargando datos de prueba..." -ForegroundColor Yellow
    .\scripts\run_scripts.ps1 test-data
}

# Paso 7: Verificar estado final
Write-Host ""
Write-Host "7Ô∏è‚É£ Verificando estado final..." -ForegroundColor Yellow
.\scripts\run_scripts.ps1 status

Write-Host ""
Write-Host "üéâ ¬°Inicializaci√≥n completada!" -ForegroundColor Green
Write-Host "===============================================" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Servicios disponibles:" -ForegroundColor Blue
Write-Host "   ‚Ä¢ Aplicaci√≥n web: http://localhost:8000" -ForegroundColor White
Write-Host "   ‚Ä¢ Nginx: http://localhost:80" -ForegroundColor White
Write-Host "   ‚Ä¢ Flower (Celery): http://localhost:5555" -ForegroundColor White
Write-Host "   ‚Ä¢ PostgreSQL: localhost:5432" -ForegroundColor White
Write-Host ""
Write-Host "üë§ Usuarios por defecto:" -ForegroundColor Blue
Write-Host "   ‚Ä¢ admin / admin123" -ForegroundColor White
Write-Host "   ‚Ä¢ alcalde / alcalde123" -ForegroundColor White
Write-Host "   ‚Ä¢ secretario / secretario123" -ForegroundColor White
Write-Host ""
Write-Host "üìÅ Scripts disponibles:" -ForegroundColor Blue
Write-Host "   ‚Ä¢ .\scripts\run_scripts.ps1 help" -ForegroundColor White
Write-Host "   ‚Ä¢ .\scripts\run_scripts.ps1 backup" -ForegroundColor White
Write-Host "   ‚Ä¢ .\scripts\run_scripts.ps1 connect" -ForegroundColor White
Write-Host ""
